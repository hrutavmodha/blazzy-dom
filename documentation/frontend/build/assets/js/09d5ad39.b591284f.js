"use strict";(self.webpackChunkfrontend=self.webpackChunkfrontend||[]).push([[864],{3973:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>d,contentTitle:()=>a,default:()=>c,frontMatter:()=>r,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"examples","title":"Examples","description":"Counter","source":"@site/docs/examples.md","sourceDirName":".","slug":"/examples","permalink":"/documentation/frontend/examples","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":9,"frontMatter":{"id":"examples","title":"Examples","sidebar_position":9},"sidebar":"tutorialSidebar","previous":{"title":"CLI","permalink":"/documentation/frontend/cli"},"next":{"title":"API Reference","permalink":"/documentation/frontend/api-reference"}}');var i=t(4848),s=t(8453);const r={id:"examples",title:"Examples",sidebar_position:9},a=void 0,d={},l=[{value:"Counter",id:"counter",level:2},{value:"Todo List",id:"todo-list",level:2},{value:"Dialogs",id:"dialogs",level:2}];function u(n){const e={code:"code",h2:"h2",pre:"pre",...(0,s.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{id:"counter",children:"Counter"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-jsx",children:"import { useState, Division, Heading, Button } from 'blazzy-dom'\n\nfunction Counter() {\n  const [count, setCount] = useState(0)\n  return (\n    <Division>\n      <Heading level={1}>Count: {count}</Heading>\n      <Button onClick={() => setCount(count + 1)}>+</Button>\n      <Button onClick={() => setCount(count - 1)}>-</Button>\n    </Division>\n  )\n}\n"})}),"\n",(0,i.jsx)(e.h2,{id:"todo-list",children:"Todo List"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-jsx",children:"import { useState, Division, Heading, Input, Button, List, Item } from 'blazzy-dom'\n\nfunction TodoApp() {\n  const [todos, setTodos] = useState([])\n  const [input, setInput] = useState('')\n\n  const addTodo = () => {\n    if (input.trim()) {\n      setTodos([...todos, input.trim()])\n      setInput('')\n    }\n  }\n\n  return (\n    <Division>\n      <Heading level={1}>Todo App</Heading>\n      <Input\n        type=\"text\"\n        value={input}\n        onInput={(e) => setInput(e.target.value)}\n        placeholder=\"Add a todo...\"\n      />\n      <Button onClick={addTodo}>Add Todo</Button>\n      <List ordered={false}>\n        {todos.map((todo, i) => (\n          <Item key={i}>{todo}</Item>\n        ))}\n      </List>\n    </Division>\n  )\n}\n"})}),"\n",(0,i.jsx)(e.h2,{id:"dialogs",children:"Dialogs"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-ts",children:"import { Alert, Confirm, Prompt } from 'blazzy-dom'\n\nAlert({ children: 'Saved successfully!' })\nconst ok = await Confirm({ children: 'Are you sure?' })\nconst name = await Prompt({ children: 'Your name:' })\n"})})]})}function c(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(u,{...n})}):u(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>r,x:()=>a});var o=t(6540);const i={},s=o.createContext(i);function r(n){const e=o.useContext(s);return o.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:r(n.components),o.createElement(s.Provider,{value:e},n.children)}}}]);